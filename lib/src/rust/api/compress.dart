// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.3.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'constants.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `compress`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ImageCompress>>
abstract class ImageCompress implements RustOpaqueInterface {
  static Future<Uint8List> contain(
          {required String filePath,
          CompressFormat? compressFormat,
          int? maxWidth,
          int? maxHeight,
          int? quality,
          FilterType? samplingFilter}) =>
      NativeImageCompress.instance.api.crateApiCompressImageCompressContain(
          filePath: filePath,
          compressFormat: compressFormat,
          maxWidth: maxWidth,
          maxHeight: maxHeight,
          quality: quality,
          samplingFilter: samplingFilter);

  static Future<Uint8List> fitHeight(
          {required String filePath,
          CompressFormat? compressFormat,
          int? maxHeight,
          int? quality,
          FilterType? samplingFilter}) =>
      NativeImageCompress.instance.api.crateApiCompressImageCompressFitHeight(
          filePath: filePath,
          compressFormat: compressFormat,
          maxHeight: maxHeight,
          quality: quality,
          samplingFilter: samplingFilter);

  static Future<Uint8List> fitWidth(
          {required String filePath,
          CompressFormat? compressFormat,
          int? maxWidth,
          int? quality,
          FilterType? samplingFilter}) =>
      NativeImageCompress.instance.api.crateApiCompressImageCompressFitWidth(
          filePath: filePath,
          compressFormat: compressFormat,
          maxWidth: maxWidth,
          quality: quality,
          samplingFilter: samplingFilter);
}
